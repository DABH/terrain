"var friends = from 'friends' as friend \n\tfilter friend.from == parentID\n\tselect friend.to;\n\nvar schoolParents = from 'schoolParents' as schoolParent\n\tfilter schoolParent.school = schoolID &&\n\t\t!(friends contains schoolParent.parent)\n\tselect schoolParent.parent;\n\t\nfrom 'sitters' as sitter\n\t\tfilter \n\t\t\tsitter.hasInfantExperience &&\n\t\t\tsitter.minRate <= maxRate &&\n\t\t\t\n\t\t\tcount (from 'sitterLocations' as location \n\tfilter location.sitter == sitter.id\n\t\t&& locationID == location) > 0 &&\n\t\n\t\t\t(from 'sitterAvailability' as availability \n\tfilter availability.sitter == sitter.id && \n\t\tavailability.time >= startDate && \n\t\tavailability.time < endDate \n\tselect availability.time) contains bookingTimes\n\t\n\t\tlet sitter.sittings = \n\t\t\tfrom 'sittings' as sitting\n\tfilter sitting.sitter == sitter.id\n\t\n\t\tlet sitter.numFriendSittings = \n\t\t\tcount sitter.sittings\n\tfilter friends contains sitting.parent\n\n\t\tlet sitter.numSchoolSittings = \n\t\t\tcount sitter.sittings\n\tfilter schoolParents contains sitting.parent\n\t\t\n\t\tlet sitter.friendSittingScore = piecewiseLinearTransform(friendSittingWeights, sitter.numFriendSittings)\n\t\tlet sitter.schoolSittingScore = piecewiseLinearTransform(schoolSittingWeights, sitter.numSchoolSittings)\n\t\tlet sitter.numJobsScore = piecewiseLinearTransform(numJobsWeights, sitter.numJobs)\n\t\tlet sitter.ratingScore = piecewiseLinearTransform(numJobsWeights, sitter.numJobs)\n\t\t\n\t\tlet sitter.score = \n\t.2 * sitter.numJobs + .2 * sitter.rating + sitter.friendSittingScore + sitter.schoolSittingScore\n\t\t\n\t\tsort sitter.score descending\n\t\tskip numToSkip\n\t\ttake pageSize"